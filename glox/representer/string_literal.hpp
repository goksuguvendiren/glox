//
// Auto-generated by Goksu Guvendiren Bakir. 
//

#pragma once

#include <utility>
#include "../token.hpp"
#include "expression.hpp"

namespace glox::repr
{
	class string_literal : public repr::expression
	{
	public:
		string_literal(
		std::unique_ptr<std::string> expr0
		) : 
			expr0(std::move(expr0))
		{}

		~string_literal() = default;

		const std::string& get_expr0() const { return *expr0; }

	private:
		std::unique_ptr<std::string> expr0;

		std::any accept(const visitor& visitor) const
		{
			return visitor.visit_string_literal_expr(*this);
		}
	};
}
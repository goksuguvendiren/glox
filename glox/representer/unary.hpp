//
// Auto-generated by Goksu Guvendiren Bakir. 
//

#pragma once

#include <utility>
#include "../token.hpp"
#include "expression.hpp"

namespace glox::repr
{
	class unary : public repr::expression
	{
	public:
		unary(
		std::unique_ptr<scanner::token> expr0,
		std::unique_ptr<repr::expression> expr1
		) : 
			expr0(std::move(expr0)),
			expr1(std::move(expr1))
		{}

~unary() = default;

	private:
		std::unique_ptr<scanner::token> expr0;
		std::unique_ptr<repr::expression> expr1;

		std::any accept(const visitor& visitor) const
		{
			return visitor.visit_unary_expr(*this);
		}
	};
}
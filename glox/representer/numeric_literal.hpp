//
// Auto-generated by Goksu Guvendiren Bakir. 
//

#pragma once

#include <utility>
#include "../token.hpp"
#include "expression.hpp"

namespace glox::repr
{
	template <class T>
	class numeric_literal : public repr::expression<T>
	{
	public:
		numeric_literal(
		double expr0
		) : 
			expr0(std::move(expr0))
		{}

~numeric_literal() = default;

	private:
		double expr0;

		T accept(const visitor<T>& visitor) const
		{
			return visitor.visit_numeric_literal_expr(*this);
		}
	};
}
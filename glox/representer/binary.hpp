//
// Auto-generated by Goksu Guvendiren Bakir.
//

#pragma once

#include <utility>
#include "../token.hpp"
#include "expression.hpp"

namespace glox::repr
{
    template <class T>
    class binary : glox::repr::expression<T>
    {
    public:
        binary(
                glox::repr::expression expr0
                glox::repr::opr expr1
                glox::repr::expression expr2
        ) :
                expr0(std::move(expr0)),
                expr1(std::move(expr1)),
                expr2(std::move(expr2))
        {}
    private:
        glox::repr::expression expr0;
        glox::repr::opr expr1;
        glox::repr::expression expr2;

        T accept(const visitor<T>& visitor)
        {
            return visitor.visit_binary_expr();
        }
    };
}
//
// Auto-generated by Goksu Guvendiren Bakir.
//

#pragma once

#include <utility>
#include "../token.hpp"
#include "expression.hpp"

namespace glox::stmt
{
class block : public stmt::statement
{
public:
    block(
            std::vector<std::unique_ptr<stmt::statement>> expr0
    ) :
            expr0(std::move(expr0))
    {}

    ~block() = default;

    [[nodiscard]]
    const std::vector<std::unique_ptr<stmt::statement>>& get_expr0() const { return expr0; }

private:
    std::vector<std::unique_ptr<stmt::statement>> expr0;

    [[nodiscard]]
    std::any accept(const stmt_visitor& visitor) const
    {
        return visitor.visit_block_statement(this);
    }
};
}